name: Docker Build and Publish

on:
  push:
    branches: [ main ]
    tags:    [ 'v*', 'release-*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: docker-build-${{ github.ref }}
      cancel-in-progress: true

    env:
      IMAGE_NAME: trignis
      SOLUTION_PATH: trignis.sln
      PROJECT_DIR: Source
      DOTNET_CONFIGURATION: Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore NuGet packages
        run: |
          dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: |
          dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore --no-incremental

      - name: Publish project
        run: |
          dotnet publish ${PROJECT_DIR} -c ${{ env.DOTNET_CONFIGURATION }} -o publish --no-restore

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.PROJECT_DIR }}/Dockerfile
          push: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push image to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.PROJECT_DIR }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Upload image digest
        if: steps.build-image.outputs.digest != ''
        run: echo "IMAGE_DIGEST=${{ steps.build-image.outputs.digest }}" >> $GITHUB_OUTPUT
